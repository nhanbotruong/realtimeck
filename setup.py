#!/usr/bin/env python3
"""
Setup script cho Auto Stock Price Updater
H∆∞·ªõng d·∫´n c·∫•u h√¨nh GitHub Actions v√† Google Sheets
"""

import os
import json
import sys

def print_banner():
    """In banner ch√†o m·ª´ng"""
    print("="*60)
    print("üìä AUTO STOCK PRICE UPDATER - SETUP")
    print("="*60)
    print("H∆∞·ªõng d·∫´n c·∫•u h√¨nh GitHub Actions v√† Google Sheets")
    print("="*60)

def check_requirements():
    """Ki·ªÉm tra c√°c y√™u c·∫ßu c∆° b·∫£n"""
    print("\nüîç KI·ªÇM TRA Y√äU C·∫¶U...")
    
    # Ki·ªÉm tra Python version
    if sys.version_info < (3, 8):
        print("‚ùå Python 3.8+ l√† b·∫Øt bu·ªôc")
        return False
    
    print("‚úÖ Python version:", sys.version.split()[0])
    
    # Ki·ªÉm tra c√°c file c·∫ßn thi·∫øt
    required_files = [
        'github_stock_updater.py',
        'requirements.txt',
        '.github/workflows/stock_updater.yml'
    ]
    
    for file in required_files:
        if os.path.exists(file):
            print(f"‚úÖ {file}")
        else:
            print(f"‚ùå {file} - Kh√¥ng t√¨m th·∫•y")
            return False
    
    print("‚úÖ T·∫•t c·∫£ file c·∫ßn thi·∫øt ƒë√£ c√≥")
    return True

def setup_google_credentials():
    """H∆∞·ªõng d·∫´n setup Google credentials"""
    print("\nüîë C·∫§U H√åNH GOOGLE CREDENTIALS...")
    print("1. Truy c·∫≠p https://console.cloud.google.com/")
    print("2. T·∫°o project m·ªõi ho·∫∑c ch·ªçn project c√≥ s·∫µn")
    print("3. B·∫≠t Google Sheets API:")
    print("   - V√†o 'APIs & Services' > 'Library'")
    print("   - T√¨m 'Google Sheets API' v√† b·∫≠t")
    print("4. T·∫°o Service Account:")
    print("   - V√†o 'IAM & Admin' > 'Service Accounts'")
    print("   - Click 'Create Service Account'")
    print("   - ƒê·∫∑t t√™n: 'stock-updater'")
    print("   - T·∫°o key JSON v√† download")
    print("5. Chia s·∫ª Google Sheets v·ªõi email service account")
    
    # H·ªèi ng∆∞·ªùi d√πng c√≥ mu·ªën t·∫°o file credentials m·∫´u kh√¥ng
    create_sample = input("\nB·∫°n c√≥ mu·ªën t·∫°o file credentials m·∫´u kh√¥ng? (y/n): ").lower()
    if create_sample == 'y':
        sample_credentials = {
            "type": "service_account",
            "project_id": "your-project-id",
            "private_key_id": "your-private-key-id",
            "private_key": "-----BEGIN PRIVATE KEY-----\nYOUR_PRIVATE_KEY_HERE\n-----END PRIVATE KEY-----\n",
            "client_email": "stock-updater@your-project.iam.gserviceaccount.com",
            "client_id": "your-client-id",
            "auth_uri": "https://accounts.google.com/o/oauth2/auth",
            "token_uri": "https://oauth2.googleapis.com/token",
            "auth_provider_x509_cert_url": "https://www.googleapis.com/oauth2/v1/certs",
            "client_x509_cert_url": "https://www.googleapis.com/robot/v1/metadata/x509/stock-updater%40your-project.iam.gserviceaccount.com"
        }
        
        with open('sample_credentials.json', 'w') as f:
            json.dump(sample_credentials, f, indent=2)
        
        print("‚úÖ ƒê√£ t·∫°o file sample_credentials.json")
        print("üí° Thay th·∫ø c√°c gi√° tr·ªã 'your-*' b·∫±ng th√¥ng tin th·ª±c t·ª´ Google Cloud Console")

def setup_github_secrets():
    """H∆∞·ªõng d·∫´n setup GitHub secrets"""
    print("\nüîê C·∫§U H√åNH GITHUB SECRETS...")
    print("1. V√†o repository GitHub c·ªßa b·∫°n")
    print("2. V√†o Settings > Secrets and variables > Actions")
    print("3. Click 'New repository secret'")
    print("4. T√™n secret: GOOGLE_CREDENTIALS_JSON")
    print("5. Value: Copy to√†n b·ªô n·ªôi dung file JSON credentials")
    print("6. Click 'Add secret'")
    
    print("\nüí° L∆∞u √Ω:")
    print("- Kh√¥ng bao gi·ªù commit file credentials v√†o git")
    print("- Secret s·∫Ω ƒë∆∞·ª£c m√£ h√≥a v√† ch·ªâ c√≥ th·ªÉ truy c·∫≠p trong Actions")
    print("- M·ªói khi c·∫≠p nh·∫≠t credentials, c·∫ßn update secret")

def setup_google_sheets():
    """H∆∞·ªõng d·∫´n setup Google Sheets"""
    print("\nüìä C·∫§U H√åNH GOOGLE SHEETS...")
    print("1. T·∫°o Google Sheets m·ªõi")
    print("2. T·∫°o sheet t√™n 'Data_CP'")
    print("3. C·∫•u tr√∫c c·ªôt:")
    print("   - C·ªôt C: Danh s√°ch m√£ c·ªï phi·∫øu")
    print("   - C·ªôt H: Gi√° c·ªï phi·∫øu (s·∫Ω ƒë∆∞·ª£c c·∫≠p nh·∫≠t t·ª± ƒë·ªông)")
    print("4. Chia s·∫ª v·ªõi email service account")
    print("5. Copy URL v√† c·∫≠p nh·∫≠t trong github_stock_updater.py")
    
    # H·ªèi ng∆∞·ªùi d√πng c√≥ mu·ªën c·∫≠p nh·∫≠t URL kh√¥ng
    update_url = input("\nB·∫°n c√≥ mu·ªën c·∫≠p nh·∫≠t SHEET_URL trong code kh√¥ng? (y/n): ").lower()
    if update_url == 'y':
        new_url = input("Nh·∫≠p URL Google Sheets: ").strip()
        if new_url:
            try:
                with open('github_stock_updater.py', 'r', encoding='utf-8') as f:
                    content = f.read()
                
                # Thay th·∫ø URL
                import re
                content = re.sub(
                    r'SHEET_URL = ".*?"',
                    f'SHEET_URL = "{new_url}"',
                    content
                )
                
                with open('github_stock_updater.py', 'w', encoding='utf-8') as f:
                    f.write(content)
                
                print("‚úÖ ƒê√£ c·∫≠p nh·∫≠t SHEET_URL")
            except Exception as e:
                print(f"‚ùå L·ªói khi c·∫≠p nh·∫≠t URL: {e}")

def test_setup():
    """Test setup c∆° b·∫£n"""
    print("\nüß™ TEST SETUP...")
    
    # Test import c√°c th∆∞ vi·ªán
    try:
        import gspread
        import vnstock
        import pytz
        print("‚úÖ T·∫•t c·∫£ th∆∞ vi·ªán c√≥ th·ªÉ import")
    except ImportError as e:
        print(f"‚ùå L·ªói import: {e}")
        print("üí° Ch·∫°y: pip install -r requirements.txt")
        return False
    
    # Test k·∫øt n·ªëi Google Sheets (n·∫øu c√≥ credentials)
    if os.path.exists('google_credentials.json'):
        try:
            from github_stock_updater import connect_google_sheets
            worksheet = connect_google_sheets()
            if worksheet:
                print("‚úÖ K·∫øt n·ªëi Google Sheets th√†nh c√¥ng")
            else:
                print("‚ö†Ô∏è Kh√¥ng th·ªÉ k·∫øt n·ªëi Google Sheets")
        except Exception as e:
            print(f"‚ö†Ô∏è L·ªói k·∫øt n·ªëi Google Sheets: {e}")
    else:
        print("‚ö†Ô∏è Ch∆∞a c√≥ file credentials ƒë·ªÉ test")
    
    return True

def main():
    """H√†m ch√≠nh"""
    print_banner()
    
    if not check_requirements():
        print("\n‚ùå Setup kh√¥ng th√†nh c√¥ng. Vui l√≤ng ki·ªÉm tra l·∫°i.")
        return
    
    print("\nüìã MENU SETUP:")
    print("1. C·∫•u h√¨nh Google Credentials")
    print("2. C·∫•u h√¨nh GitHub Secrets")
    print("3. C·∫•u h√¨nh Google Sheets")
    print("4. Test setup")
    print("5. T·∫•t c·∫£ c√°c b∆∞·ªõc tr√™n")
    print("0. Tho√°t")
    
    while True:
        choice = input("\nCh·ªçn option (0-5): ").strip()
        
        if choice == '0':
            print("üëã T·∫°m bi·ªát!")
            break
        elif choice == '1':
            setup_google_credentials()
        elif choice == '2':
            setup_github_secrets()
        elif choice == '3':
            setup_google_sheets()
        elif choice == '4':
            test_setup()
        elif choice == '5':
            setup_google_credentials()
            setup_github_secrets()
            setup_google_sheets()
            test_setup()
            print("\n‚úÖ Setup ho√†n t·∫•t!")
            print("üöÄ B√¢y gi·ªù b·∫°n c√≥ th·ªÉ push code l√™n GitHub v√† Actions s·∫Ω t·ª± ƒë·ªông ch·∫°y")
            break
        else:
            print("‚ùå L·ª±a ch·ªçn kh√¥ng h·ª£p l·ªá")

if __name__ == "__main__":
    main()
